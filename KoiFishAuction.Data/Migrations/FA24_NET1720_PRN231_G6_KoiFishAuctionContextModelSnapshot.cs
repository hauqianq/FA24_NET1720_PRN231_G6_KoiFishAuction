// <auto-generated />
using System;
using KoiFishAuction.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoiFishAuction.Data.Migrations
{
    [DbContext(typeof(FA24_NET1720_PRN231_G6_KoiFishAuctionContext))]
    partial class FA24_NET1720_PRN231_G6_KoiFishAuctionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KoiFishAuction.Data.Models.AuctionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuctionSessionId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FeedbackStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("KoiFishId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("WinnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("WinningAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("WinningDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuctionSessionId")
                        .IsUnique();

                    b.HasIndex("KoiFishId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("WinnerId");

                    b.ToTable("AuctionHistories", (string)null);
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.AuctionSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("KoiFishId")
                        .HasColumnType("int");

                    b.Property<decimal>("MinIncrement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("KoiFishId");

                    b.HasIndex("WinnerId");

                    b.ToTable("AuctionSessions", (string)null);
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AuctionSessionId")
                        .HasColumnType("int");

                    b.Property<int>("BidderId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsWinning")
                        .HasColumnType("bit");

                    b.Property<int?>("KoiFishId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuctionSessionId");

                    b.HasIndex("BidderId");

                    b.HasIndex("KoiFishId");

                    b.ToTable("Bids", (string)null);
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.KoiFish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ColorPattern")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<decimal>("StartingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("KoiFishes", (string)null);
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BidId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BidId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications", (string)null);
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Confirmation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HistoryId")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HistoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.AuctionHistory", b =>
                {
                    b.HasOne("KoiFishAuction.Data.Models.AuctionSession", "AuctionSession")
                        .WithOne("AuctionHistory")
                        .HasForeignKey("KoiFishAuction.Data.Models.AuctionHistory", "AuctionSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.KoiFish", null)
                        .WithMany("AuctionHistories")
                        .HasForeignKey("KoiFishId");

                    b.HasOne("KoiFishAuction.Data.Models.User", "Owner")
                        .WithMany("AuctionHistoryOwners")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.User", "Winner")
                        .WithMany("AuctionHistoryWinners")
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AuctionSession");

                    b.Navigation("Owner");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.AuctionSession", b =>
                {
                    b.HasOne("KoiFishAuction.Data.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.KoiFish", "KoiFish")
                        .WithMany("AuctionSessions")
                        .HasForeignKey("KoiFishId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.User", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("KoiFish");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Bid", b =>
                {
                    b.HasOne("KoiFishAuction.Data.Models.AuctionSession", "AuctionSession")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.User", "Bidder")
                        .WithMany("Bids")
                        .HasForeignKey("BidderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.KoiFish", null)
                        .WithMany("Bids")
                        .HasForeignKey("KoiFishId");

                    b.Navigation("AuctionSession");

                    b.Navigation("Bidder");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.KoiFish", b =>
                {
                    b.HasOne("KoiFishAuction.Data.Models.User", "Seller")
                        .WithMany("KoiFishes")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Notification", b =>
                {
                    b.HasOne("KoiFishAuction.Data.Models.Bid", "Bid")
                        .WithMany("Notifications")
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("KoiFishAuction.Data.Models.KoiFish", "Item")
                        .WithMany("Notifications")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("KoiFishAuction.Data.Models.User", "Sender")
                        .WithMany("NotificationSenders")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KoiFishAuction.Data.Models.User", "User")
                        .WithMany("NotificationUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Bid");

                    b.Navigation("Item");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Payment", b =>
                {
                    b.HasOne("KoiFishAuction.Data.Models.AuctionHistory", "History")
                        .WithMany("Payments")
                        .HasForeignKey("HistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("History");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.AuctionHistory", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.AuctionSession", b =>
                {
                    b.Navigation("AuctionHistory")
                        .IsRequired();

                    b.Navigation("Bids");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Bid", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.KoiFish", b =>
                {
                    b.Navigation("AuctionHistories");

                    b.Navigation("AuctionSessions");

                    b.Navigation("Bids");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.User", b =>
                {
                    b.Navigation("AuctionHistoryOwners");

                    b.Navigation("AuctionHistoryWinners");

                    b.Navigation("Bids");

                    b.Navigation("KoiFishes");

                    b.Navigation("NotificationSenders");

                    b.Navigation("NotificationUsers");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
