// <auto-generated />
using System;
using KoiFishAuction.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoiFishAuction.Data.Migrations
{
    [DbContext(typeof(FA24_NET1720_PRN231_G6_KoiFishAuctionContext))]
    partial class FA24_NET1720_PRN231_G6_KoiFishAuctionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KoiFishAuction.Data.Models.AuctionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuctionSessionId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FeedbackStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("KoiFishId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("WinnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("WinningAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("WinningDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuctionSessionId")
                        .IsUnique();

                    b.HasIndex("KoiFishId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("WinnerId");

                    b.ToTable("AuctionHistories", (string)null);
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.AuctionSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("KoiFishId")
                        .HasColumnType("int");

                    b.Property<decimal>("MinIncrement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("KoiFishId");

                    b.HasIndex("WinnerId");

                    b.ToTable("AuctionSessions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatorId = 4,
                            EndTime = new DateTime(2025, 5, 31, 21, 1, 42, 445, DateTimeKind.Local).AddTicks(8359),
                            KoiFishId = 6,
                            MinIncrement = 599.71m,
                            Name = "Tasty Plastic Bike",
                            Note = "Non ipsam eius delectus illum repudiandae non ut.",
                            StartTime = new DateTime(2025, 8, 7, 15, 8, 59, 914, DateTimeKind.Local).AddTicks(8112),
                            Status = 0,
                            WinnerId = 4
                        },
                        new
                        {
                            Id = 2,
                            CreatorId = 9,
                            EndTime = new DateTime(2024, 11, 1, 16, 41, 27, 532, DateTimeKind.Local).AddTicks(3827),
                            KoiFishId = 3,
                            MinIncrement = 656.60m,
                            Name = "Handcrafted Cotton Pants",
                            Note = "Similique dolorem est modi consequatur.",
                            StartTime = new DateTime(2025, 10, 21, 13, 31, 48, 951, DateTimeKind.Local).AddTicks(38),
                            Status = 0,
                            WinnerId = 9
                        },
                        new
                        {
                            Id = 3,
                            CreatorId = 4,
                            EndTime = new DateTime(2025, 7, 7, 5, 22, 43, 748, DateTimeKind.Local).AddTicks(1747),
                            KoiFishId = 8,
                            MinIncrement = 607.71m,
                            Name = "Rustic Steel Pants",
                            Note = "Consectetur voluptatum et modi porro recusandae.",
                            StartTime = new DateTime(2025, 9, 11, 6, 19, 13, 536, DateTimeKind.Local).AddTicks(4074),
                            Status = 1,
                            WinnerId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatorId = 10,
                            EndTime = new DateTime(2025, 9, 17, 6, 29, 2, 753, DateTimeKind.Local).AddTicks(6944),
                            KoiFishId = 8,
                            MinIncrement = 972.80m,
                            Name = "Tasty Concrete Mouse",
                            Note = "Qui sed sunt totam autem dolorem.",
                            StartTime = new DateTime(2025, 6, 16, 18, 52, 37, 841, DateTimeKind.Local).AddTicks(4481),
                            Status = 0,
                            WinnerId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatorId = 8,
                            EndTime = new DateTime(2025, 10, 23, 18, 12, 51, 607, DateTimeKind.Local).AddTicks(6411),
                            KoiFishId = 2,
                            MinIncrement = 726.83m,
                            Name = "Rustic Rubber Bacon",
                            Note = "Cumque nemo dolores eligendi dolorum perspiciatis laborum iusto.",
                            StartTime = new DateTime(2025, 2, 15, 3, 46, 19, 847, DateTimeKind.Local).AddTicks(2319),
                            Status = 0,
                            WinnerId = 7
                        },
                        new
                        {
                            Id = 6,
                            CreatorId = 9,
                            EndTime = new DateTime(2024, 11, 3, 14, 34, 5, 197, DateTimeKind.Local).AddTicks(4706),
                            KoiFishId = 7,
                            MinIncrement = 971.95m,
                            Name = "Small Concrete Bike",
                            Note = "Consequatur ad ea voluptatem reprehenderit suscipit.",
                            StartTime = new DateTime(2025, 6, 20, 1, 17, 14, 124, DateTimeKind.Local).AddTicks(2912),
                            Status = 1,
                            WinnerId = 8
                        },
                        new
                        {
                            Id = 7,
                            CreatorId = 9,
                            EndTime = new DateTime(2025, 5, 13, 6, 1, 6, 606, DateTimeKind.Local).AddTicks(2410),
                            KoiFishId = 4,
                            MinIncrement = 279.95m,
                            Name = "Licensed Frozen Bike",
                            Note = "Natus non eum pariatur.",
                            StartTime = new DateTime(2025, 5, 22, 8, 1, 19, 911, DateTimeKind.Local).AddTicks(8713),
                            Status = 1,
                            WinnerId = 8
                        },
                        new
                        {
                            Id = 8,
                            CreatorId = 1,
                            EndTime = new DateTime(2025, 7, 21, 21, 38, 37, 76, DateTimeKind.Local).AddTicks(7717),
                            KoiFishId = 1,
                            MinIncrement = 717.60m,
                            Name = "Incredible Fresh Chair",
                            Note = "Animi eos architecto ea.",
                            StartTime = new DateTime(2025, 2, 11, 17, 3, 14, 734, DateTimeKind.Local).AddTicks(380),
                            Status = 1,
                            WinnerId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatorId = 10,
                            EndTime = new DateTime(2025, 1, 10, 14, 26, 24, 487, DateTimeKind.Local).AddTicks(8150),
                            KoiFishId = 4,
                            MinIncrement = 508.49m,
                            Name = "Tasty Cotton Car",
                            Note = "Quia id consectetur est eius doloremque sit illo nulla quia.",
                            StartTime = new DateTime(2024, 12, 25, 11, 2, 2, 43, DateTimeKind.Local).AddTicks(522),
                            Status = 0,
                            WinnerId = 6
                        },
                        new
                        {
                            Id = 10,
                            CreatorId = 7,
                            EndTime = new DateTime(2025, 8, 30, 2, 23, 48, 147, DateTimeKind.Local).AddTicks(8124),
                            KoiFishId = 3,
                            MinIncrement = 350.49m,
                            Name = "Handcrafted Steel Fish",
                            Note = "Ut et voluptate.",
                            StartTime = new DateTime(2025, 6, 20, 6, 44, 7, 207, DateTimeKind.Local).AddTicks(4603),
                            Status = 1,
                            WinnerId = 10
                        });
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AuctionSessionId")
                        .HasColumnType("int");

                    b.Property<int>("BidderId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsWinning")
                        .HasColumnType("bit");

                    b.Property<int?>("KoiFishId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuctionSessionId");

                    b.HasIndex("BidderId");

                    b.HasIndex("KoiFishId");

                    b.ToTable("Bids", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 255.20m,
                            AuctionSessionId = 8,
                            BidderId = 6,
                            Currency = "ISK",
                            IsWinning = true,
                            Location = "Howechester",
                            Note = "Tempore quia qui dicta exercitationem nihil qui quia cupiditate.",
                            Timestamp = new DateTime(2024, 10, 24, 1, 36, 54, 593, DateTimeKind.Local).AddTicks(2540)
                        },
                        new
                        {
                            Id = 2,
                            Amount = 366.06m,
                            AuctionSessionId = 9,
                            BidderId = 2,
                            Currency = "SCR",
                            IsWinning = true,
                            Location = "East Juliaberg",
                            Note = "Sed molestiae quod.",
                            Timestamp = new DateTime(2024, 10, 24, 2, 45, 50, 810, DateTimeKind.Local).AddTicks(3929)
                        },
                        new
                        {
                            Id = 3,
                            Amount = 908.55m,
                            AuctionSessionId = 9,
                            BidderId = 1,
                            Currency = "SRD",
                            IsWinning = false,
                            Location = "Wintheiserview",
                            Note = "Deserunt officia natus ea eum temporibus.",
                            Timestamp = new DateTime(2024, 10, 24, 21, 44, 6, 444, DateTimeKind.Local).AddTicks(5059)
                        },
                        new
                        {
                            Id = 4,
                            Amount = 798.89m,
                            AuctionSessionId = 5,
                            BidderId = 3,
                            Currency = "XTS",
                            IsWinning = true,
                            Location = "Lake Bo",
                            Note = "Temporibus culpa perspiciatis dolor aut iusto debitis.",
                            Timestamp = new DateTime(2024, 10, 24, 20, 46, 13, 708, DateTimeKind.Local).AddTicks(9296)
                        },
                        new
                        {
                            Id = 5,
                            Amount = 543.09m,
                            AuctionSessionId = 7,
                            BidderId = 8,
                            Currency = "XBC",
                            IsWinning = true,
                            Location = "Andersontown",
                            Note = "Quia fuga minus eaque commodi omnis quo.",
                            Timestamp = new DateTime(2024, 10, 24, 8, 33, 4, 695, DateTimeKind.Local).AddTicks(1766)
                        },
                        new
                        {
                            Id = 6,
                            Amount = 170.51m,
                            AuctionSessionId = 7,
                            BidderId = 6,
                            Currency = "XBC",
                            IsWinning = false,
                            Location = "West Amiechester",
                            Note = "Consequatur eum placeat a officiis similique quia.",
                            Timestamp = new DateTime(2024, 10, 24, 10, 51, 39, 552, DateTimeKind.Local).AddTicks(4265)
                        },
                        new
                        {
                            Id = 7,
                            Amount = 54.56m,
                            AuctionSessionId = 1,
                            BidderId = 7,
                            Currency = "XAF",
                            IsWinning = false,
                            Location = "Trompchester",
                            Note = "Similique alias voluptate.",
                            Timestamp = new DateTime(2024, 10, 24, 11, 8, 37, 549, DateTimeKind.Local).AddTicks(3855)
                        },
                        new
                        {
                            Id = 8,
                            Amount = 392.88m,
                            AuctionSessionId = 1,
                            BidderId = 1,
                            Currency = "SEK",
                            IsWinning = true,
                            Location = "New Ulises",
                            Note = "Et fuga ea accusamus eos voluptas delectus dignissimos est aut.",
                            Timestamp = new DateTime(2024, 10, 24, 17, 3, 59, 29, DateTimeKind.Local).AddTicks(1446)
                        },
                        new
                        {
                            Id = 9,
                            Amount = 484.60m,
                            AuctionSessionId = 3,
                            BidderId = 5,
                            Currency = "PYG",
                            IsWinning = true,
                            Location = "Jacintheview",
                            Note = "Eum et numquam voluptas libero dolores eius porro sunt sequi.",
                            Timestamp = new DateTime(2024, 10, 24, 20, 59, 4, 211, DateTimeKind.Local).AddTicks(719)
                        },
                        new
                        {
                            Id = 10,
                            Amount = 209.05m,
                            AuctionSessionId = 5,
                            BidderId = 5,
                            Currency = "MUR",
                            IsWinning = true,
                            Location = "Aricshire",
                            Note = "Dolorem tempora est.",
                            Timestamp = new DateTime(2024, 10, 24, 7, 7, 47, 690, DateTimeKind.Local).AddTicks(1872)
                        });
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.KoiFish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ColorPattern")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<decimal>("StartingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("KoiFishes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 10,
                            ColorPattern = "blue",
                            CurrentPrice = 693.08m,
                            Description = "Velit sed est sint ut et. Soluta illum ut laudantium beatae et. Delectus voluptatem aperiam libero hic odit aperiam consectetur. Doloremque cupiditate molestiae omnis. Qui aut id molestias est excepturi. Nulla voluptas quam id voluptatem ratione ratione dolores eum.",
                            Length = 23.902140241808380m,
                            Name = "Intelligent Soft Soap",
                            Origin = "Singapore",
                            SellerId = 7,
                            StartingPrice = 51.65m,
                            Weight = 4.115905455367531m
                        },
                        new
                        {
                            Id = 2,
                            Age = 6,
                            ColorPattern = "indigo",
                            CurrentPrice = 138.23m,
                            Description = "Enim quo animi facilis. Ut assumenda velit iusto earum consequatur consequatur. Dolorem temporibus ipsam molestiae totam. Autem mollitia non maiores explicabo non.",
                            Length = 76.325434027523470m,
                            Name = "Sleek Plastic Table",
                            Origin = "Gambia",
                            SellerId = 2,
                            StartingPrice = 481.80m,
                            Weight = 6.742184309051239m
                        },
                        new
                        {
                            Id = 3,
                            Age = 3,
                            ColorPattern = "orange",
                            CurrentPrice = 744.92m,
                            Description = "Id molestiae officia aut earum aut vel. Consequuntur quod laboriosam modi. Excepturi et facilis. Qui occaecati soluta itaque quo at.",
                            Length = 69.727458078228610m,
                            Name = "Fantastic Plastic Chicken",
                            Origin = "Tokelau",
                            SellerId = 4,
                            StartingPrice = 282.37m,
                            Weight = 4.814528396013451m
                        },
                        new
                        {
                            Id = 4,
                            Age = 2,
                            ColorPattern = "green",
                            CurrentPrice = 408.73m,
                            Description = "Non aut at. Suscipit omnis deleniti ab. Rerum quibusdam qui. Ut amet est ut temporibus. Corporis et dolorem.",
                            Length = 37.235984640559570m,
                            Name = "Unbranded Cotton Ball",
                            Origin = "Vietnam",
                            SellerId = 10,
                            StartingPrice = 661.74m,
                            Weight = 5.36831699491036m
                        },
                        new
                        {
                            Id = 5,
                            Age = 9,
                            ColorPattern = "mint green",
                            CurrentPrice = 367.31m,
                            Description = "Ut est ullam recusandae sapiente cumque iure rem earum dolorem. Commodi ut perspiciatis inventore. Asperiores et deserunt in et neque vitae. Fugiat eaque quia pariatur voluptate omnis ducimus tempora.",
                            Length = 82.14512687932240m,
                            Name = "Sleek Fresh Bike",
                            Origin = "Georgia",
                            SellerId = 9,
                            StartingPrice = 194.48m,
                            Weight = 7.630364399406445m
                        },
                        new
                        {
                            Id = 6,
                            Age = 2,
                            ColorPattern = "turquoise",
                            CurrentPrice = 397.81m,
                            Description = "Veniam voluptas alias et. Placeat corporis officia. Ipsum sed impedit ipsam aliquid. Provident ipsa ut saepe et.",
                            Length = 71.195135805875170m,
                            Name = "Practical Wooden Chair",
                            Origin = "Belarus",
                            SellerId = 10,
                            StartingPrice = 590.38m,
                            Weight = 5.484862827609004m
                        },
                        new
                        {
                            Id = 7,
                            Age = 6,
                            ColorPattern = "maroon",
                            CurrentPrice = 857.38m,
                            Description = "Reiciendis dolorum doloribus et. Dolorem facilis nihil animi fuga consectetur enim quo aliquam. Iste ut deserunt modi.",
                            Length = 61.187052637244080m,
                            Name = "Tasty Metal Towels",
                            Origin = "Saint Kitts and Nevis",
                            SellerId = 7,
                            StartingPrice = 486.39m,
                            Weight = 3.933145368395929m
                        },
                        new
                        {
                            Id = 8,
                            Age = 7,
                            ColorPattern = "maroon",
                            CurrentPrice = 647.24m,
                            Description = "Itaque natus fuga placeat. Dolores maiores voluptatem laborum et. Voluptatem doloribus cumque aperiam vero ad voluptatibus molestiae maiores. Hic ea hic vel quidem molestiae placeat. Exercitationem aliquid modi et veritatis hic quisquam neque. Maiores fuga ipsum dolorem reiciendis eum.",
                            Length = 12.268226005181020m,
                            Name = "Intelligent Steel Keyboard",
                            Origin = "Iraq",
                            SellerId = 10,
                            StartingPrice = 950.10m,
                            Weight = 7.901375992435729m
                        },
                        new
                        {
                            Id = 9,
                            Age = 1,
                            ColorPattern = "pink",
                            CurrentPrice = 327.56m,
                            Description = "Nostrum animi ducimus id ut maiores autem voluptatem sint. Delectus unde aliquam animi a aspernatur dolor. Veniam dolorum accusantium amet et facere suscipit animi libero. Optio non et quasi.",
                            Length = 93.23108770034350m,
                            Name = "Ergonomic Frozen Hat",
                            Origin = "Armenia",
                            SellerId = 4,
                            StartingPrice = 326.29m,
                            Weight = 4.509828866746954m
                        },
                        new
                        {
                            Id = 10,
                            Age = 6,
                            ColorPattern = "grey",
                            CurrentPrice = 672.11m,
                            Description = "Laboriosam deleniti laborum dolores dolorem. Voluptatem voluptas esse sit numquam fuga maiores sequi. Dolorum minima aut pariatur omnis ipsam. Porro nobis consequatur. Dolor voluptatem atque distinctio. Deserunt porro nesciunt perspiciatis veritatis eum accusamus.",
                            Length = 88.939971637706260m,
                            Name = "Unbranded Granite Gloves",
                            Origin = "Panama",
                            SellerId = 10,
                            StartingPrice = 702.45m,
                            Weight = 9.204779649509137m
                        });
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.KoiImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("KoiFishId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KoiFishId");

                    b.ToTable("KoiImages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/KoiFishes%2F8f2643c8-509c-472e-9f6b-a21a8c834afd_z5964522313997_4d1564fb784c83f3328193edbb3e9ba8.jpg?alt=media&token=4da21ba5-f085-4dfe-9c46-3829d703d6c6",
                            KoiFishId = 8
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/KoiFishes%2F7123ea67-b7d4-4bb7-8e3c-88ba3a137ec9_z5964522287255_817108d9e4a4bb1021d0067b43e12311.jpg?alt=media&token=12586d8e-383b-456f-b0d7-4b9c4e795f5e",
                            KoiFishId = 9
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/KoiFishes%2F386a2dc2-8659-4cbe-bdc2-035922868e21_z5964522300982_d636340f7c9af809bb3498fb033ee4ab.jpg?alt=media&token=1cf786b3-14bf-42f8-87cb-13a25c11a839",
                            KoiFishId = 4
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/KoiFishes%2F386a2dc2-8659-4cbe-bdc2-035922868e21_z5964522300982_d636340f7c9af809bb3498fb033ee4ab.jpg?alt=media&token=1cf786b3-14bf-42f8-87cb-13a25c11a839",
                            KoiFishId = 7
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/KoiFishes%2Fca1e94e1-4e5d-4440-9f41-bc1b72d64008_z5964522287272_fa2418df806688a9845d8f61aaaf8356.jpg?alt=media&token=4cd799f8-53ad-40d7-b0c2-401f2504e3b6",
                            KoiFishId = 1
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/KoiFishes%2Fcbcd27d7-f9df-41fa-b636-c3d9712318a6_z5964522300950_c06ded23e1a5ac463f3777f638e669a2.jpg?alt=media&token=b9c00fde-27cb-4182-90b0-a9a8f58d2524",
                            KoiFishId = 1
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/KoiFishes%2F86032796-6f68-48a0-945d-906f5e51953d_z5964522323938_45ac9c0bf64f44c5f94b641d706c2f22.jpg?alt=media&token=06ba130f-d25e-4379-a2ef-6b321c5ed3d6",
                            KoiFishId = 6
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/KoiFishes%2F98ed17cc-7ae4-46f1-9fe4-d21eaa008532_z5964522323936_8241fd1fce084b7a8ed279caf3b02969.jpg?alt=media&token=4f79a562-f68d-4356-8de5-74c5e5e72b62",
                            KoiFishId = 6
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/KoiFishes%2Fdcbb2824-bd17-4c79-9ade-0f27734ca74a_z5964522334297_db4648522151c8cd83ac3a6f2588da6b.jpg?alt=media&token=3fd25c8d-ed0a-4acc-a761-266b08dba6d9",
                            KoiFishId = 1
                        },
                        new
                        {
                            Id = 10,
                            ImageUrl = "https://firebasestorage.googleapis.com/v0/b/fir-project-31c70.appspot.com/o/KoiFishes%2Fdcbb2824-bd17-4c79-9ade-0f27734ca74a_z5964522334297_db4648522151c8cd83ac3a6f2588da6b.jpg?alt=media&token=3fd25c8d-ed0a-4acc-a761-266b08dba6d9",
                            KoiFishId = 2
                        });
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BidId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BidId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications", (string)null);
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Confirmation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HistoryId")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HistoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "844 Reichert Cove, South Carriemouth, Mozambique",
                            Balance = 196.77m,
                            Email = "Marielle_Crona@hotmail.com",
                            FullName = "Buddy Pacocha",
                            JoinDate = new DateTime(2024, 4, 19, 12, 37, 43, 448, DateTimeKind.Local).AddTicks(9618),
                            LastLogin = new DateTime(2024, 10, 24, 17, 48, 27, 810, DateTimeKind.Local).AddTicks(1848),
                            Password = "1vgZzMnRUE",
                            PhoneNumber = "1-311-789-2115",
                            Username = "Dallas_Adams1"
                        },
                        new
                        {
                            Id = 2,
                            Address = "2366 Kelsie Motorway, Port Chandler, Brazil",
                            Balance = 311.14m,
                            Email = "Sammie.Lindgren@yahoo.com",
                            FullName = "Amber Hane",
                            JoinDate = new DateTime(2024, 6, 20, 9, 49, 52, 637, DateTimeKind.Local).AddTicks(8137),
                            LastLogin = new DateTime(2024, 10, 24, 1, 19, 50, 688, DateTimeKind.Local).AddTicks(2432),
                            Password = "FmljAxTBr6",
                            PhoneNumber = "667-709-8372",
                            Username = "Lois_Hessel"
                        },
                        new
                        {
                            Id = 3,
                            Address = "4195 Terry Islands, South Vincechester, Palestinian Territory",
                            Balance = 274.68m,
                            Email = "Jamie82@gmail.com",
                            FullName = "Ignatius Botsford",
                            JoinDate = new DateTime(2024, 8, 8, 4, 59, 49, 143, DateTimeKind.Local).AddTicks(2400),
                            LastLogin = new DateTime(2024, 10, 24, 3, 44, 57, 764, DateTimeKind.Local).AddTicks(3655),
                            Password = "7RTb9Wjxe1",
                            PhoneNumber = "(297) 399-7780 x590",
                            Username = "Everardo76"
                        },
                        new
                        {
                            Id = 4,
                            Address = "586 Smitham Vista, West Demetrisfort, Belize",
                            Balance = 747.79m,
                            Email = "Matilda_Schaden81@hotmail.com",
                            FullName = "Skylar Schumm",
                            JoinDate = new DateTime(2024, 6, 29, 11, 2, 10, 265, DateTimeKind.Local).AddTicks(2118),
                            LastLogin = new DateTime(2024, 10, 24, 17, 14, 40, 386, DateTimeKind.Local).AddTicks(6884),
                            Password = "AlAM0gQPFe",
                            PhoneNumber = "806-916-4293 x703",
                            Username = "Iva_Senger42"
                        },
                        new
                        {
                            Id = 5,
                            Address = "948 Raymond Stravenue, Lake Ricardofort, United Kingdom",
                            Balance = 547.22m,
                            Email = "Grace.Hessel94@yahoo.com",
                            FullName = "Milton McDermott",
                            JoinDate = new DateTime(2024, 2, 8, 5, 46, 13, 154, DateTimeKind.Local).AddTicks(2330),
                            LastLogin = new DateTime(2024, 10, 24, 13, 18, 52, 359, DateTimeKind.Local).AddTicks(8201),
                            Password = "tumL1XvYG4",
                            PhoneNumber = "273-352-9440",
                            Username = "Jaylan53"
                        },
                        new
                        {
                            Id = 6,
                            Address = "1871 Judson Lodge, Reichertbury, Republic of Korea",
                            Balance = 979.99m,
                            Email = "Kianna77@gmail.com",
                            FullName = "Ottilie Dach",
                            JoinDate = new DateTime(2023, 11, 12, 11, 35, 29, 627, DateTimeKind.Local).AddTicks(7064),
                            LastLogin = new DateTime(2024, 10, 24, 12, 16, 14, 894, DateTimeKind.Local).AddTicks(1019),
                            Password = "Pe7RjCu0WJ",
                            PhoneNumber = "989.298.1559",
                            Username = "Emmanuel73"
                        },
                        new
                        {
                            Id = 7,
                            Address = "30487 Hane Village, Lake Darrel, Tonga",
                            Balance = 644.96m,
                            Email = "Wyatt.Effertz@yahoo.com",
                            FullName = "Lauriane Effertz",
                            JoinDate = new DateTime(2023, 11, 1, 23, 8, 44, 141, DateTimeKind.Local).AddTicks(2442),
                            LastLogin = new DateTime(2024, 10, 24, 21, 58, 47, 447, DateTimeKind.Local).AddTicks(757),
                            Password = "6KtYOen16T",
                            PhoneNumber = "545-356-5877",
                            Username = "Frederic.Bins34"
                        },
                        new
                        {
                            Id = 8,
                            Address = "64385 Tremblay Summit, East Emilioton, Thailand",
                            Balance = 369.63m,
                            Email = "Deangelo_Lynch@hotmail.com",
                            FullName = "Enrico Bergnaum",
                            JoinDate = new DateTime(2024, 3, 28, 14, 29, 41, 419, DateTimeKind.Local).AddTicks(9283),
                            LastLogin = new DateTime(2024, 10, 24, 19, 55, 16, 869, DateTimeKind.Local).AddTicks(8893),
                            Password = "dqIv8kYFXq",
                            PhoneNumber = "928-688-4002",
                            Username = "Terrence6"
                        },
                        new
                        {
                            Id = 9,
                            Address = "218 John Streets, Ziemefurt, Cook Islands",
                            Balance = 914.58m,
                            Email = "Dean.Walsh53@yahoo.com",
                            FullName = "Leann Gerlach",
                            JoinDate = new DateTime(2024, 1, 3, 10, 16, 10, 664, DateTimeKind.Local).AddTicks(5196),
                            LastLogin = new DateTime(2024, 10, 24, 15, 7, 52, 440, DateTimeKind.Local).AddTicks(6663),
                            Password = "qJ0KyJMs9b",
                            PhoneNumber = "526.200.3179",
                            Username = "Isobel_Kautzer"
                        },
                        new
                        {
                            Id = 10,
                            Address = "378 Kendrick Branch, Delphineport, Botswana",
                            Balance = 634.84m,
                            Email = "Adrianna59@hotmail.com",
                            FullName = "Haven Bosco",
                            JoinDate = new DateTime(2024, 8, 18, 10, 54, 25, 424, DateTimeKind.Local).AddTicks(4995),
                            LastLogin = new DateTime(2024, 10, 24, 20, 12, 28, 58, DateTimeKind.Local).AddTicks(3954),
                            Password = "Q2JJd3qHk3",
                            PhoneNumber = "(580) 880-2227 x8529",
                            Username = "Hans.Wehner43"
                        });
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.AuctionHistory", b =>
                {
                    b.HasOne("KoiFishAuction.Data.Models.AuctionSession", "AuctionSession")
                        .WithOne("AuctionHistory")
                        .HasForeignKey("KoiFishAuction.Data.Models.AuctionHistory", "AuctionSessionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.KoiFish", null)
                        .WithMany("AuctionHistories")
                        .HasForeignKey("KoiFishId");

                    b.HasOne("KoiFishAuction.Data.Models.User", "Owner")
                        .WithMany("AuctionHistoryOwners")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.User", "Winner")
                        .WithMany("AuctionHistoryWinners")
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AuctionSession");

                    b.Navigation("Owner");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.AuctionSession", b =>
                {
                    b.HasOne("KoiFishAuction.Data.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.KoiFish", "KoiFish")
                        .WithMany("AuctionSessions")
                        .HasForeignKey("KoiFishId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.User", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId");

                    b.Navigation("Creator");

                    b.Navigation("KoiFish");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Bid", b =>
                {
                    b.HasOne("KoiFishAuction.Data.Models.AuctionSession", "AuctionSession")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.User", "Bidder")
                        .WithMany("Bids")
                        .HasForeignKey("BidderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.KoiFish", null)
                        .WithMany("Bids")
                        .HasForeignKey("KoiFishId");

                    b.Navigation("AuctionSession");

                    b.Navigation("Bidder");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.KoiFish", b =>
                {
                    b.HasOne("KoiFishAuction.Data.Models.User", "Seller")
                        .WithMany("KoiFishes")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.KoiImage", b =>
                {
                    b.HasOne("KoiFishAuction.Data.Models.KoiFish", "KoiFish")
                        .WithMany("KoiImages")
                        .HasForeignKey("KoiFishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KoiFish");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Notification", b =>
                {
                    b.HasOne("KoiFishAuction.Data.Models.Bid", "Bid")
                        .WithMany("Notifications")
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("KoiFishAuction.Data.Models.KoiFish", "Item")
                        .WithMany("Notifications")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("KoiFishAuction.Data.Models.User", "Sender")
                        .WithMany("NotificationSenders")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("KoiFishAuction.Data.Models.User", "User")
                        .WithMany("NotificationUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Bid");

                    b.Navigation("Item");

                    b.Navigation("Sender");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Payment", b =>
                {
                    b.HasOne("KoiFishAuction.Data.Models.AuctionHistory", "History")
                        .WithMany("Payments")
                        .HasForeignKey("HistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiFishAuction.Data.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("History");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.AuctionHistory", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.AuctionSession", b =>
                {
                    b.Navigation("AuctionHistory")
                        .IsRequired();

                    b.Navigation("Bids");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.Bid", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.KoiFish", b =>
                {
                    b.Navigation("AuctionHistories");

                    b.Navigation("AuctionSessions");

                    b.Navigation("Bids");

                    b.Navigation("KoiImages");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("KoiFishAuction.Data.Models.User", b =>
                {
                    b.Navigation("AuctionHistoryOwners");

                    b.Navigation("AuctionHistoryWinners");

                    b.Navigation("Bids");

                    b.Navigation("KoiFishes");

                    b.Navigation("NotificationSenders");

                    b.Navigation("NotificationUsers");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
